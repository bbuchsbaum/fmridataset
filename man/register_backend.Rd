% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backend_registry.R
\name{register_backend}
\alias{register_backend}
\title{Register a Storage Backend}
\usage{
register_backend(
  name,
  factory,
  description = NULL,
  validate_function = NULL,
  overwrite = FALSE
)
}
\arguments{
\item{name}{Character string, unique name for the backend type}

\item{factory}{Function that creates backend instances, must accept \code{...} arguments}

\item{description}{Optional character string describing the backend}

\item{validate_function}{Optional function to validate backend instances beyond the standard contract}

\item{overwrite}{Logical, whether to overwrite existing registration (default: FALSE)}
}
\value{
Invisibly returns TRUE on successful registration
}
\description{
Registers a new storage backend type in the global registry.
External packages can use this function to add custom backend support.
}
\details{
The factory function should:
\itemize{
\item Accept all necessary parameters to create a backend instance
\item Return an object that inherits from "storage_backend"
\item Implement all required storage backend methods
}

The validate_function should:
\itemize{
\item Accept a backend object as first argument
\item Return TRUE if valid, or throw informative error if invalid
\item Perform any backend-specific validation beyond the standard contract
}
}
\examples{
\dontrun{
# Register a custom backend
my_backend_factory <- function(source, ...) {
  # Create and return backend instance
  backend <- list(source = source, ...)
  class(backend) <- c("my_backend", "storage_backend")
  backend
}

register_backend(
  name = "my_backend",
  factory = my_backend_factory,
  description = "Custom backend for my data format"
)
}
}
