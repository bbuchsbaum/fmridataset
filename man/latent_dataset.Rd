% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataset_constructors.R, R/latent_dataset.R
\name{latent_dataset}
\alias{latent_dataset}
\title{Create a Latent Dataset Object}
\usage{
latent_dataset(
  source,
  TR,
  run_length,
  event_table = data.frame(),
  base_path = ".",
  censor = NULL,
  preload = FALSE
)

latent_dataset(
  source,
  TR,
  run_length,
  event_table = data.frame(),
  base_path = ".",
  censor = NULL,
  preload = FALSE
)
}
\arguments{
\item{source}{Character vector of file paths to LatentNeuroVec HDF5 files (.lv.h5),
or a list of LatentNeuroVec objects from the fmristore package.}

\item{TR}{The repetition time in seconds.}

\item{run_length}{Vector of integers indicating the number of scans in each run.}

\item{event_table}{Optional data.frame containing event onsets and experimental variables.}

\item{base_path}{Base directory for relative file paths.}

\item{censor}{Optional binary vector indicating which scans to remove.}

\item{preload}{Logical indicating whether to preload all data into memory.}

\item{lvec}{An instance of class \code{LatentNeuroVec}. (Typically, a \code{LatentNeuroVec} is
created using the \code{fmristore} package.)}
}
\value{
A latent dataset object of class \code{c("latent_dataset", "matrix_dataset", "fmri_dataset", "list")}.

A \code{latent_dataset} object with class \code{c("latent_dataset", "fmri_dataset")}.
}
\description{
This function creates a latent dataset object, which encapsulates a dimension-reduced
subspace of "latent variables". The dataset is a list containing information about the latent
neuroimaging vector, TR, number of runs, event table, base path, sampling frame, and censor.

A specialized dataset interface for working with latent space representations
of fMRI data. Unlike traditional fMRI datasets that work with voxel-space data,
latent datasets operate on compressed representations using basis functions.

This interface is designed for data that has been decomposed into temporal
components (basis functions) and spatial loadings, such as from PCA, ICA,
or dictionary learning methods.

Creates a dataset object for working with latent space representations of fMRI data.
This is the primary constructor for latent datasets.
}
\details{
\subsection{Key Differences from Standard Datasets:}{
\itemize{
\item \strong{Data Access}: Returns latent scores (time × components) instead of voxel data
\item \strong{Mask}: Represents active components, not spatial voxels
\item \strong{Dimensions}: Component space rather than voxel space
\item \strong{Reconstruction}: Can optionally reconstruct to voxel space on demand
}
}

\subsection{Data Structure:}{

Latent representations store data as:
\itemize{
\item \code{basis}: Temporal components (n_timepoints × k_components)
\item \code{loadings}: Spatial components (n_voxels × k_components)
\item \code{offset}: Optional per-voxel offset terms
\item Reconstruction: \code{data = basis \%*\% t(loadings) + offset}
}
}
}
\examples{
\dontrun{
# Create a matrix with 100 rows and 1000 columns (voxels)
X <- matrix(rnorm(100 * 1000), 100, 1000)
pres <- prcomp(X)
basis <- pres$x[, 1:25]
loadings <- pres$rotation[, 1:25]
offset <- colMeans(X)

# Create a LatentNeuroVec object (requires the fmristore package)
lvec <- fmristore::LatentNeuroVec(basis, loadings,
  neuroim2::NeuroSpace(c(10, 10, 10, 100)),
  mask = rep(TRUE, 1000), offset = offset
)

# Create a latent_dataset
dset <- latent_dataset(lvec, TR = 2, run_length = 100)
}
\dontrun{
# From LatentNeuroVec files
dataset <- latent_dataset(
  source = c("run1.lv.h5", "run2.lv.h5"),
  TR = 2,
  run_length = c(100, 100)
)

# Access latent scores
scores <- get_latent_scores(dataset)

# Get component metadata
comp_info <- get_component_info(dataset)
}
}
\seealso{
Other latent_data: 
\code{\link{get_component_info}()},
\code{\link{get_latent_scores}()},
\code{\link{get_spatial_loadings}()},
\code{\link{reconstruct_voxels}()}

Other latent_data: 
\code{\link{get_component_info}()},
\code{\link{get_latent_scores}()},
\code{\link{get_spatial_loadings}()},
\code{\link{reconstruct_voxels}()}
}
\concept{latent_data}
